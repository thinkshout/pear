/**
 * @fileoverview Rule to check if a call to map and flatten should be a call to _.flatMap
 */
'use strict';

//------------------------------------------------------------------------------
// Rule Definition
//------------------------------------------------------------------------------

module.exports = function (context) {
    var _require = require('../util/lodashUtil');

    var getLodashMethodVisitor = _require.getLodashMethodVisitor;
    var isCallToMethod = _require.isCallToMethod;
    var isLodashCallToMethod = _require.isLodashCallToMethod;

    var _require2 = require('../util/astUtil');

    var getCaller = _require2.getCaller;

    var settings = require('../util/settingsUtil').getSettings(context);

    return {
        CallExpression: getLodashMethodVisitor(settings, function (node) {
            if (isCallToMethod(node, settings.version, 'flatten') && (isCallToMethod(getCaller(node), settings.version, 'map') || isLodashCallToMethod(node.arguments[0], settings, 'map'))) {
                context.report(node, 'Prefer _.flatMap over consecutive map and flatten.');
            }
        })
    };
};